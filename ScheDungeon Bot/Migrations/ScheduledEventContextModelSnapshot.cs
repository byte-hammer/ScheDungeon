// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheDungeon.EntityFramework;

#nullable disable

namespace ScheDungeon.Migrations
{
    [DbContext(typeof(ScheduledEventContext))]
    partial class ScheduledEventContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ScheDungeon.EntityFramework.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ScheduledEventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledEventId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ScheDungeon.EntityFramework.ScheduledEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ScheduledEvents");
                });

            modelBuilder.Entity("ScheDungeon.EntityFramework.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScheduledEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Triggered")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledEventId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ScheDungeon.EntityFramework.Player", b =>
                {
                    b.HasOne("ScheDungeon.EntityFramework.ScheduledEvent", "ScheduledEvent")
                        .WithMany("Players")
                        .HasForeignKey("ScheduledEventId");

                    b.Navigation("ScheduledEvent");
                });

            modelBuilder.Entity("ScheDungeon.EntityFramework.Session", b =>
                {
                    b.HasOne("ScheDungeon.EntityFramework.ScheduledEvent", "ScheduledEvent")
                        .WithMany("Sessions")
                        .HasForeignKey("ScheduledEventId");

                    b.Navigation("ScheduledEvent");
                });

            modelBuilder.Entity("ScheDungeon.EntityFramework.ScheduledEvent", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
